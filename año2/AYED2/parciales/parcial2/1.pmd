---
title: Práctica - Trabajo Entregable 2 - 2021
author: Lautaro Bachmann
---
\maketitle
\newpage
\tableofcontents
\newpage

# 1)

\begin{tabular}{ l l l }
& \textbf{type} ciudad := \textbf{tuple}\\
& \quad nombre: string\\
& \quad costo: nat\\
& \textbf{end tuple}\\
\end{tabular}

\begin{tabular}{ l l l }
& \textbf{fun} hoteles(C: array[1..N] of ciudad, M: nat ) \textbf{ret} r : set \textbf{of} ciudad\\
& \quad r:= empty\_set()\\
& \quad \textbf{var} mas\_barata: ciudad\\
& \quad \textbf{var} monto\_actual: nat\\
& \quad \textbf{var} i: nat\\
& \quad \textbf{var} hay\_plata: bool\\
& \quad monto\_actual:= M\\
& \quad hay\_plata:= true\\
& \quad r:= empty\_set()\\
& \quad \textbf{while} hay\_plata \textbf{do}\\
& \quad \quad mas\_barata:= elegir\_mas\_barata(C, i, N)\\
& \quad \quad \textbf{if} monto\_actual - mas\_barata.costo $\ge$ 0 \textbf{then}\\
& \quad \quad \quad monto\_actual := monto\_actual - mas\_barata.costo\\
& \quad \quad \quad set\_add(r, mas\_barata)\\
& \quad \quad \textbf{else}\\
& \quad \quad \quad hay\_plata := false\\
& \quad \quad \textbf{fi}\\
& \quad \textbf{od}\\
& \textbf{end fun}\\
\end{tabular}

# 2)

## Descripcion
oficinas(i, k):= "Calcula el maximo valor posible de la sumatoria de 1 hasta i de $p^i_j/C_j$, siendo i el numero de la oficina que se está recorriendo y k el indice del color elegido para la oficina i" 
$$
oficinas(i, k):=
\begin{cases}
0 & i=0\\
Max_{j \in \{j' \in \{1,2,3\}| j'\ne k\} }(p^i_j/C_j + oficinas(i-1, j)) & i>1\\
\end{cases}
$$

## Llamada principal
r:= oficinas(n, 1) \textbf{max} oficinas(n, 2) \textbf{max} oficinas(n, 3)  


## Tabla
\begin{tabular}{ |c|c|c| }
\hline
 $p^1_1/C_1$  &  $p^1_1/C_2$  &  $p^1_1/C_3$ \\
\hline
 $p^2_1/C_1$  &  $p^2_1/C_2$  &  $p^2_1/C_3$ \\
\hline
 $p^3_1/C_1$  &  $p^3_1/C_2$  &  $p^3_1/C_3$ \\
\hline
 $p^4_1/C_1$  &  $p^4_1/C_2$  &  $p^4_1/C_3$ \\
\hline
 $p^5_1/C_1$  &  $p^5_1/C_2$  &  $p^5_1/C_3$ \\
\hline
 $p^6_1/C_1$  &  $p^6_1/C_2$  &  $p^6_1/C_3$ \\
\hline
\end{tabular}




# 3)
\begin{tabular}{ l l l }
& \textbf{fun} oficinas(p: array[1..n,1..3] of nat, C: array[1..3] of nat) \textbf{ret} r : nat\\
& \quad \emph{\{- Declaracion de variables -\}}\\
& \quad \textbf{var} tabla: array[0..n,1..3] of nat\\
& \quad \textbf{var} prev\_color: nat\\
& \quad \textbf{var} maximo: nat\\
& \quad \emph{\{- Casos base -\}}\\
& \quad maximo:= 0\\
& \quad prev\_color:= 0\\
& \quad \textbf{for} j := 1 \textbf{to} 3 \textbf{do}\\
& \quad \quad tabla[0, j]:= 0\\
& \quad \textbf{od}\\
& \quad \emph{\{- Caso recursivo -\}}\\
& \quad \textbf{for} i := 1 \textbf{to} n \textbf{do}\\
& \quad \quad maximo:= 0\\
& \quad \quad \textbf{for} j := 1 \textbf{to} 3 \textbf{do}\\
& \quad \quad \quad \textbf{if} prev\_color != j $\wedge$ p[i, j]/C[j] + tabla[i-1, j] > maximo \textbf{then}\\
& \quad \quad \quad \quad maximo:= p[i, j]/C[j] + tabla[i-1, j]\\
& \quad \quad \quad \quad prev\_color:= j\\
& \quad \quad \quad \textbf{fi}\\
& \quad \quad \quad tabla[i, j]:= maximo\\
& \quad \quad \textbf{od}\\
& \quad \textbf{od}\\
& \quad r:= tabla[n, 1] \textbf{max} tabla[n, 2] \textbf{max} tabla[n, 3]\\
& \textbf{end fun}\\
\end{tabular}

## Tabla

\begin{tabular}{ |c|c|c| }
\hline
 0  &  0  &  0 \\
\hline
    &     &    \\
\hline
    &     &    \\
\hline
    &     &    \\
\hline
    &     &    \\
\hline
\end{tabular}




